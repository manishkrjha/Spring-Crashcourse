package com.spring.jdbc;

import java.util.List;

import org.springframework.context.ApplicationContext;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.springframework.jdbc.core.JdbcTemplate;

import com.spring.jdbc.dao.StudentDao;
import com.spring.jdbc.entities.Student;


public class App 
{
    public static void main( String[] args )
    {
        System.out.println( "initiating the progam..." );
        
//        Requiring JDBC template object
//        ApplicationContext context = new ClassPathXmlApplicationContext("com/spring/jdbc/config.xml");
        
        
        ApplicationContext context = new AnnotationConfigApplicationContext(configFile.class);
        

//        JdbcTemplate template = context.getBean("jdbcTemplate", JdbcTemplate.class);
        
//        INSERT (NON Professional way)
//        String query = "INSERT INTO STUDENT(id, name, city) VALUES(?,?,?)";
        
//        Firing insert query
//        int result = template.update(query, 456, "Uttam", "Kanpur");
//        System.out.println("No. of records inserted: " + result);
        
        
        StudentDao studentDao = context.getBean("studentDao", StudentDao.class);
        
        Student st = new Student();
        st.setId(88);
        st.setName("Satyam");
        st.setCity("NRI");
    
        int res = studentDao.insert(st);
        System.out.println("Added: " + res);
        
//        Student st = new Student();
//        st.setId(222);
//        st.setName("Manish");
//        st.setCity("Darbhanga");
//        
//        int res = studentDao.change(st);
//        System.out.println("Updated: " + res);
        
//        Student st = new Student();
//        st.setId(1100);
//        st.setName("Anthony");
//        
//        int res = studentDao.remove(st);
//        System.out.println("Deleted: " +  res);
    
//        Student st = studentDao.getStudent(222);
//        System.out.println(st);
        
        List<Student> allStudents = studentDao.getAllStudents();
        for(Student s: allStudents) {
        	System.out.println(s);
        }
    
    }
}
